
ecarr024_lab5_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000240  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000240  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000270  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008ee  00000000  00000000  000002d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000800  00000000  00000000  00000bc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000394  00000000  00000000  000013c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  0000175c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d9  00000000  00000000  00001790  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000dc  00000000  00000000  00001c69  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001d45  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	5b c0       	rjmp	.+182    	; 0xb8 <__ctors_end>
   2:	00 00       	nop
   4:	69 c0       	rjmp	.+210    	; 0xd8 <__bad_interrupt>
   6:	00 00       	nop
   8:	67 c0       	rjmp	.+206    	; 0xd8 <__bad_interrupt>
   a:	00 00       	nop
   c:	65 c0       	rjmp	.+202    	; 0xd8 <__bad_interrupt>
   e:	00 00       	nop
  10:	63 c0       	rjmp	.+198    	; 0xd8 <__bad_interrupt>
  12:	00 00       	nop
  14:	61 c0       	rjmp	.+194    	; 0xd8 <__bad_interrupt>
  16:	00 00       	nop
  18:	5f c0       	rjmp	.+190    	; 0xd8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5d c0       	rjmp	.+186    	; 0xd8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5b c0       	rjmp	.+182    	; 0xd8 <__bad_interrupt>
  22:	00 00       	nop
  24:	59 c0       	rjmp	.+178    	; 0xd8 <__bad_interrupt>
  26:	00 00       	nop
  28:	57 c0       	rjmp	.+174    	; 0xd8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	55 c0       	rjmp	.+170    	; 0xd8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	53 c0       	rjmp	.+166    	; 0xd8 <__bad_interrupt>
  32:	00 00       	nop
  34:	51 c0       	rjmp	.+162    	; 0xd8 <__bad_interrupt>
  36:	00 00       	nop
  38:	4f c0       	rjmp	.+158    	; 0xd8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4d c0       	rjmp	.+154    	; 0xd8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4b c0       	rjmp	.+150    	; 0xd8 <__bad_interrupt>
  42:	00 00       	nop
  44:	49 c0       	rjmp	.+146    	; 0xd8 <__bad_interrupt>
  46:	00 00       	nop
  48:	47 c0       	rjmp	.+142    	; 0xd8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	45 c0       	rjmp	.+138    	; 0xd8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	43 c0       	rjmp	.+134    	; 0xd8 <__bad_interrupt>
  52:	00 00       	nop
  54:	41 c0       	rjmp	.+130    	; 0xd8 <__bad_interrupt>
  56:	00 00       	nop
  58:	3f c0       	rjmp	.+126    	; 0xd8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3d c0       	rjmp	.+122    	; 0xd8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3b c0       	rjmp	.+118    	; 0xd8 <__bad_interrupt>
  62:	00 00       	nop
  64:	39 c0       	rjmp	.+114    	; 0xd8 <__bad_interrupt>
  66:	00 00       	nop
  68:	37 c0       	rjmp	.+110    	; 0xd8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	35 c0       	rjmp	.+106    	; 0xd8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	33 c0       	rjmp	.+102    	; 0xd8 <__bad_interrupt>
  72:	00 00       	nop
  74:	31 c0       	rjmp	.+98     	; 0xd8 <__bad_interrupt>
  76:	00 00       	nop
  78:	2f c0       	rjmp	.+94     	; 0xd8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2d c0       	rjmp	.+90     	; 0xd8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2b c0       	rjmp	.+86     	; 0xd8 <__bad_interrupt>
  82:	00 00       	nop
  84:	29 c0       	rjmp	.+82     	; 0xd8 <__bad_interrupt>
  86:	00 00       	nop
  88:	27 c0       	rjmp	.+78     	; 0xd8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	79 00       	.word	0x0079	; ????
  8e:	80 00       	.word	0x0080	; ????
  90:	86 00       	.word	0x0086	; ????
  92:	8b 00       	.word	0x008b	; ????
  94:	91 00       	.word	0x0091	; ????
  96:	96 00       	.word	0x0096	; ????
  98:	9c 00       	.word	0x009c	; ????
  9a:	a1 00       	.word	0x00a1	; ????
  9c:	a7 00       	.word	0x00a7	; ????
  9e:	ac 00       	.word	0x00ac	; ????
  a0:	cb 00       	.word	0x00cb	; ????
  a2:	c1 00       	.word	0x00c1	; ????
  a4:	c1 00       	.word	0x00c1	; ????
  a6:	c3 00       	.word	0x00c3	; ????
  a8:	c3 00       	.word	0x00c3	; ????
  aa:	c5 00       	.word	0x00c5	; ????
  ac:	c5 00       	.word	0x00c5	; ????
  ae:	c7 00       	.word	0x00c7	; ????
  b0:	c7 00       	.word	0x00c7	; ????
  b2:	c1 00       	.word	0x00c1	; ????
  b4:	c1 00       	.word	0x00c1	; ????
  b6:	cb 00       	.word	0x00cb	; ????

000000b8 <__ctors_end>:
  b8:	11 24       	eor	r1, r1
  ba:	1f be       	out	0x3f, r1	; 63
  bc:	cf ef       	ldi	r28, 0xFF	; 255
  be:	d0 e4       	ldi	r29, 0x40	; 64
  c0:	de bf       	out	0x3e, r29	; 62
  c2:	cd bf       	out	0x3d, r28	; 61

000000c4 <__do_clear_bss>:
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	a0 e0       	ldi	r26, 0x00	; 0
  c8:	b1 e0       	ldi	r27, 0x01	; 1
  ca:	01 c0       	rjmp	.+2      	; 0xce <.do_clear_bss_start>

000000cc <.do_clear_bss_loop>:
  cc:	1d 92       	st	X+, r1

000000ce <.do_clear_bss_start>:
  ce:	a1 30       	cpi	r26, 0x01	; 1
  d0:	b2 07       	cpc	r27, r18
  d2:	e1 f7       	brne	.-8      	; 0xcc <.do_clear_bss_loop>
  d4:	62 d0       	rcall	.+196    	; 0x19a <main>
  d6:	78 c0       	rjmp	.+240    	; 0x1c8 <_exit>

000000d8 <__bad_interrupt>:
  d8:	93 cf       	rjmp	.-218    	; 0x0 <__vectors>

000000da <festive_SM>:
} state;

unsigned char festive_SM(unsigned char button) {
	unsigned char led = 0x00;
	
	switch(state) {
  da:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <_edata>
  de:	49 2f       	mov	r20, r25
  e0:	50 e0       	ldi	r21, 0x00	; 0
  e2:	4a 30       	cpi	r20, 0x0A	; 10
  e4:	51 05       	cpc	r21, r1
  e6:	08 f0       	brcs	.+2      	; 0xea <festive_SM+0x10>
  e8:	3d c0       	rjmp	.+122    	; 0x164 <festive_SM+0x8a>
  ea:	fa 01       	movw	r30, r20
  ec:	ea 5b       	subi	r30, 0xBA	; 186
  ee:	ff 4f       	sbci	r31, 0xFF	; 255
  f0:	62 c0       	rjmp	.+196    	; 0x1b6 <__tablejump2__>
		case released_config1:
			state = button ? pressed_config2 : released_config1;
  f2:	91 e0       	ldi	r25, 0x01	; 1
  f4:	81 11       	cpse	r24, r1
  f6:	01 c0       	rjmp	.+2      	; 0xfa <festive_SM+0x20>
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
  fe:	36 c0       	rjmp	.+108    	; 0x16c <festive_SM+0x92>
		case pressed_config2:
			state = button ? pressed_config2 : released_config2;
 100:	81 11       	cpse	r24, r1
 102:	01 c0       	rjmp	.+2      	; 0x106 <festive_SM+0x2c>
 104:	92 e0       	ldi	r25, 0x02	; 2
 106:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 10a:	30 c0       	rjmp	.+96     	; 0x16c <festive_SM+0x92>
		case released_config2:
			state = button ? pressed_config3 : released_config2;
 10c:	81 11       	cpse	r24, r1
 10e:	93 e0       	ldi	r25, 0x03	; 3
 110:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 114:	2b c0       	rjmp	.+86     	; 0x16c <festive_SM+0x92>
		case pressed_config3:
			state = button ? pressed_config3 : released_config3;
 116:	81 11       	cpse	r24, r1
 118:	01 c0       	rjmp	.+2      	; 0x11c <festive_SM+0x42>
 11a:	94 e0       	ldi	r25, 0x04	; 4
 11c:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 120:	25 c0       	rjmp	.+74     	; 0x16c <festive_SM+0x92>
		case released_config3:
			state = button ? pressed_config4 : released_config3;
 122:	81 11       	cpse	r24, r1
 124:	95 e0       	ldi	r25, 0x05	; 5
 126:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 12a:	20 c0       	rjmp	.+64     	; 0x16c <festive_SM+0x92>
		case pressed_config4:
			state = button ? pressed_config4 : released_config4;
 12c:	81 11       	cpse	r24, r1
 12e:	01 c0       	rjmp	.+2      	; 0x132 <festive_SM+0x58>
 130:	96 e0       	ldi	r25, 0x06	; 6
 132:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 136:	1a c0       	rjmp	.+52     	; 0x16c <festive_SM+0x92>
		case released_config4:
			state = button ? pressed_config5 : released_config4;
 138:	81 11       	cpse	r24, r1
 13a:	97 e0       	ldi	r25, 0x07	; 7
 13c:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 140:	15 c0       	rjmp	.+42     	; 0x16c <festive_SM+0x92>
		case pressed_config5:
			state = button ? pressed_config5 : released_config5;
 142:	81 11       	cpse	r24, r1
 144:	01 c0       	rjmp	.+2      	; 0x148 <festive_SM+0x6e>
 146:	98 e0       	ldi	r25, 0x08	; 8
 148:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 14c:	0f c0       	rjmp	.+30     	; 0x16c <festive_SM+0x92>
		case released_config5:
			state = button ? pressed_config6 : released_config5;
 14e:	81 11       	cpse	r24, r1
 150:	99 e0       	ldi	r25, 0x09	; 9
 152:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 156:	0a c0       	rjmp	.+20     	; 0x16c <festive_SM+0x92>
		case pressed_config6:
			state = button ? pressed_config6 : released_config1;
 158:	81 11       	cpse	r24, r1
 15a:	01 c0       	rjmp	.+2      	; 0x15e <festive_SM+0x84>
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
			break;
 162:	04 c0       	rjmp	.+8      	; 0x16c <festive_SM+0x92>
		default:
			state = released_config1;
 164:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	}
	
	switch(state) {
		case pressed_config1:
		case released_config1:
			led = 0x55; // .*.*.*.*
 168:	85 e5       	ldi	r24, 0x55	; 85
 16a:	08 95       	ret
			break;
		default:
			state = released_config1;
	}
	
	switch(state) {
 16c:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <_edata>
 170:	8e 2f       	mov	r24, r30
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	8c 30       	cpi	r24, 0x0C	; 12
 176:	91 05       	cpc	r25, r1
 178:	60 f4       	brcc	.+24     	; 0x192 <festive_SM+0xb8>
 17a:	fc 01       	movw	r30, r24
 17c:	e0 5b       	subi	r30, 0xB0	; 176
 17e:	ff 4f       	sbci	r31, 0xFF	; 255
 180:	1a c0       	rjmp	.+52     	; 0x1b6 <__tablejump2__>
		case released_config1:
			led = 0x55; // .*.*.*.*
			break;
		case pressed_config2:
		case released_config2:
			led = 0x2A; // ..*.*.*.
 182:	8a e2       	ldi	r24, 0x2A	; 42
 184:	08 95       	ret
			break;
		case pressed_config3:
		case released_config3:
			led = 0x14; // ...*.*..
 186:	84 e1       	ldi	r24, 0x14	; 20
			break;
 188:	08 95       	ret
		case pressed_config4:
		case released_config4:
			led = 0x08; // ....*...
 18a:	88 e0       	ldi	r24, 0x08	; 8
			break;
 18c:	08 95       	ret
		case pressed_config5:
		case released_config5:
			led = 0x14; // ...*.*..
 18e:	84 e1       	ldi	r24, 0x14	; 20
			break;
 190:	08 95       	ret
		case pressed_config6:
		case released_config6:
			led = 0x2A; // ..*.*.*.
			break;
		default:
			led = 0xFF; // should never happen
 192:	8f ef       	ldi	r24, 0xFF	; 255
 194:	08 95       	ret
	}
	
	switch(state) {
		case pressed_config1:
		case released_config1:
			led = 0x55; // .*.*.*.*
 196:	85 e5       	ldi	r24, 0x55	; 85
		default:
			led = 0xFF; // should never happen
	}
	
	return led;
}
 198:	08 95       	ret

0000019a <main>:

int main(void)
{
    DDRA = 0x00; PORTA = 0xFF;
 19a:	11 b8       	out	0x01, r1	; 1
 19c:	8f ef       	ldi	r24, 0xFF	; 255
 19e:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 1a0:	84 b9       	out	0x04, r24	; 4
 1a2:	15 b8       	out	0x05, r1	; 5
	unsigned char button = 0x00;
	unsigned char led = 0x00;
	
	state = released_config1;
 1a4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	
    while (1) 
    {
		button = (~PINA) & 0x01;
		led = festive_SM(button);
 1a8:	c1 e0       	ldi	r28, 0x01	; 1
	
	state = released_config1;
	
    while (1) 
    {
		button = (~PINA) & 0x01;
 1aa:	80 b1       	in	r24, 0x00	; 0
		led = festive_SM(button);
 1ac:	8c 27       	eor	r24, r28
 1ae:	81 70       	andi	r24, 0x01	; 1
 1b0:	94 df       	rcall	.-216    	; 0xda <festive_SM>
		PORTB = led;
 1b2:	85 b9       	out	0x05, r24	; 5
 1b4:	fa cf       	rjmp	.-12     	; 0x1aa <main+0x10>

000001b6 <__tablejump2__>:
 1b6:	ee 0f       	add	r30, r30
 1b8:	ff 1f       	adc	r31, r31
 1ba:	00 24       	eor	r0, r0
 1bc:	00 1c       	adc	r0, r0
 1be:	0b be       	out	0x3b, r0	; 59
 1c0:	07 90       	elpm	r0, Z+
 1c2:	f6 91       	elpm	r31, Z
 1c4:	e0 2d       	mov	r30, r0
 1c6:	09 94       	ijmp

000001c8 <_exit>:
 1c8:	f8 94       	cli

000001ca <__stop_program>:
 1ca:	ff cf       	rjmp	.-2      	; 0x1ca <__stop_program>
